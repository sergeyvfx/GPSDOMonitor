<?xml version="1.0"?>
<dumps>
  <platform name="win32A" char_bit="8" short_bit="16" int_bit="32" long_bit="32" long_long_bit="64" pointer_bit="32"/>
  <rawtokens>
    <file index="0" name="../source/base/algorithm.h"/>
    <tok fileIndex="0" linenr="1" column="1" str="// Copyright (c) 2021, Sergey Sharybin"/>
    <tok fileIndex="0" linenr="2" column="1" str="//"/>
    <tok fileIndex="0" linenr="3" column="1" str="// Permission is hereby granted, free of charge, to any person obtaining a copy"/>
    <tok fileIndex="0" linenr="4" column="1" str="// of this software and associated documentation files (the &quot;Software&quot;), to"/>
    <tok fileIndex="0" linenr="5" column="1" str="// deal in the Software without restriction, including without limitation the"/>
    <tok fileIndex="0" linenr="6" column="1" str="// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or"/>
    <tok fileIndex="0" linenr="7" column="1" str="// sell copies of the Software, and to permit persons to whom the Software is"/>
    <tok fileIndex="0" linenr="8" column="1" str="// furnished to do so, subject to the following conditions:"/>
    <tok fileIndex="0" linenr="9" column="1" str="//"/>
    <tok fileIndex="0" linenr="10" column="1" str="// The above copyright notice and this permission notice shall be included in"/>
    <tok fileIndex="0" linenr="11" column="1" str="// all copies or substantial portions of the Software."/>
    <tok fileIndex="0" linenr="12" column="1" str="//"/>
    <tok fileIndex="0" linenr="13" column="1" str="// THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"/>
    <tok fileIndex="0" linenr="14" column="1" str="// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"/>
    <tok fileIndex="0" linenr="15" column="1" str="// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"/>
    <tok fileIndex="0" linenr="16" column="1" str="// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"/>
    <tok fileIndex="0" linenr="17" column="1" str="// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING"/>
    <tok fileIndex="0" linenr="18" column="1" str="// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS"/>
    <tok fileIndex="0" linenr="19" column="1" str="// IN THE SOFTWARE."/>
    <tok fileIndex="0" linenr="20" column="1" str="//"/>
    <tok fileIndex="0" linenr="21" column="1" str="// Author: Sergey Sharybin (sergey.vfx@gmail.com)"/>
    <tok fileIndex="0" linenr="23" column="1" str="#"/>
    <tok fileIndex="0" linenr="23" column="2" str="ifndef"/>
    <tok fileIndex="0" linenr="23" column="9" str="BASE_ALGORITHM_H_"/>
    <tok fileIndex="0" linenr="24" column="1" str="#"/>
    <tok fileIndex="0" linenr="24" column="2" str="define"/>
    <tok fileIndex="0" linenr="24" column="9" str="BASE_ALGORITHM_H_"/>
    <tok fileIndex="0" linenr="26" column="1" str="#"/>
    <tok fileIndex="0" linenr="26" column="2" str="include"/>
    <tok fileIndex="0" linenr="26" column="10" str="&lt;stddef.h&gt;"/>
    <tok fileIndex="0" linenr="28" column="1" str="#"/>
    <tok fileIndex="0" linenr="28" column="2" str="ifdef"/>
    <tok fileIndex="0" linenr="28" column="8" str="__cplusplus"/>
    <tok fileIndex="0" linenr="29" column="1" str="extern"/>
    <tok fileIndex="0" linenr="29" column="8" str="&quot;C&quot;"/>
    <tok fileIndex="0" linenr="29" column="12" str="{"/>
    <tok fileIndex="0" linenr="30" column="1" str="#"/>
    <tok fileIndex="0" linenr="30" column="2" str="endif"/>
    <tok fileIndex="0" linenr="32" column="1" str="inline"/>
    <tok fileIndex="0" linenr="32" column="8" str="size_t"/>
    <tok fileIndex="0" linenr="32" column="15" str="min_zz"/>
    <tok fileIndex="0" linenr="32" column="21" str="("/>
    <tok fileIndex="0" linenr="32" column="22" str="size_t"/>
    <tok fileIndex="0" linenr="32" column="29" str="a"/>
    <tok fileIndex="0" linenr="32" column="30" str=","/>
    <tok fileIndex="0" linenr="32" column="32" str="size_t"/>
    <tok fileIndex="0" linenr="32" column="39" str="b"/>
    <tok fileIndex="0" linenr="32" column="40" str=")"/>
    <tok fileIndex="0" linenr="32" column="42" str="{"/>
    <tok fileIndex="0" linenr="33" column="3" str="return"/>
    <tok fileIndex="0" linenr="33" column="10" str="("/>
    <tok fileIndex="0" linenr="33" column="11" str="a"/>
    <tok fileIndex="0" linenr="33" column="13" str="&lt;"/>
    <tok fileIndex="0" linenr="33" column="15" str="b"/>
    <tok fileIndex="0" linenr="33" column="16" str=")"/>
    <tok fileIndex="0" linenr="33" column="18" str="?"/>
    <tok fileIndex="0" linenr="33" column="20" str="a"/>
    <tok fileIndex="0" linenr="33" column="22" str=":"/>
    <tok fileIndex="0" linenr="33" column="24" str="b"/>
    <tok fileIndex="0" linenr="33" column="25" str=";"/>
    <tok fileIndex="0" linenr="34" column="1" str="}"/>
    <tok fileIndex="0" linenr="36" column="1" str="#"/>
    <tok fileIndex="0" linenr="36" column="2" str="ifdef"/>
    <tok fileIndex="0" linenr="36" column="8" str="__cplusplus"/>
    <tok fileIndex="0" linenr="37" column="1" str="}"/>
    <tok fileIndex="0" linenr="38" column="1" str="#"/>
    <tok fileIndex="0" linenr="38" column="2" str="endif"/>
    <tok fileIndex="0" linenr="40" column="1" str="#"/>
    <tok fileIndex="0" linenr="40" column="2" str="endif"/>
    <tok fileIndex="0" linenr="40" column="9" str="// BASE_ALGORITHM_H_"/>
  </rawtokens>
  <suppressions>
  </suppressions>
<dump cfg="">
  <standards>
    <c version="c11"/>
    <cpp version="c++20"/>
  </standards>
  <directivelist>
    <directive file="../source/base/algorithm.h" linenr="23" str="#ifndef BASE_ALGORITHM_H_"/>
    <directive file="../source/base/algorithm.h" linenr="24" str="#define BASE_ALGORITHM_H_"/>
    <directive file="../source/base/algorithm.h" linenr="26" str="#include &lt;stddef.h&gt;"/>
    <directive file="../source/base/algorithm.h" linenr="28" str="#ifdef __cplusplus"/>
    <directive file="../source/base/algorithm.h" linenr="30" str="#endif"/>
    <directive file="../source/base/algorithm.h" linenr="36" str="#ifdef __cplusplus"/>
    <directive file="../source/base/algorithm.h" linenr="38" str="#endif"/>
    <directive file="../source/base/algorithm.h" linenr="40" str="#endif"/>
  </directivelist>
  <tokenlist>
    <token id="00A7E888" file="../source/base/algorithm.h" linenr="32" column="8" str="long" scope="00902C20" type="name" isUnsigned="true" originalName="size_t"/>
    <token id="00A7EA48" file="../source/base/algorithm.h" linenr="32" column="15" str="min_zz" scope="00902C20" type="name" function="027A16F0" astParent="00A7EB08"/>
    <token id="00A7EB08" file="../source/base/algorithm.h" linenr="32" column="21" str="(" scope="00902C20" link="00A7F108" astOperand1="00A7EA48" astOperand2="00A7F188" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7EB48" file="../source/base/algorithm.h" linenr="32" column="22" str="long" scope="00902C20" type="name" isUnsigned="true" originalName="size_t"/>
    <token id="00A7EBC8" file="../source/base/algorithm.h" linenr="32" column="29" str="a" scope="00902C20" type="name" varId="1" variable="00A7F0D0" astParent="00A7F188" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7F188" file="../source/base/algorithm.h" linenr="32" column="30" str="," scope="00902C20" astParent="00A7EB08" astOperand1="00A7EBC8" astOperand2="00A7F248"/>
    <token id="00A7EDC8" file="../source/base/algorithm.h" linenr="32" column="32" str="long" scope="00902C20" type="name" isUnsigned="true" originalName="size_t"/>
    <token id="00A7F248" file="../source/base/algorithm.h" linenr="32" column="39" str="b" scope="00902C20" type="name" varId="2" variable="00A7F350" astParent="00A7F188" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7F108" file="../source/base/algorithm.h" linenr="32" column="40" str=")" scope="00902C20" link="00A7EB08"/>
    <token id="00A7EF88" file="../source/base/algorithm.h" linenr="32" column="42" str="{" scope="00902A58" link="00A7F2C8"/>
    <token id="00A7F288" file="../source/base/algorithm.h" linenr="33" column="3" str="return" scope="00902A58" type="name" astOperand1="00A7EE48" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7EFC8" file="../source/base/algorithm.h" linenr="33" column="10" str="(" scope="00902A58" link="00A7F1C8"/>
    <token id="00A7F3C8" file="../source/base/algorithm.h" linenr="33" column="11" str="a" scope="00902A58" type="name" varId="1" variable="00A7F0D0" astParent="00A7EE88" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7EE88" file="../source/base/algorithm.h" linenr="33" column="13" str="&lt;" scope="00902A58" type="op" isComparisonOp="True" astParent="00A7EE48" astOperand1="00A7F3C8" astOperand2="00A7EE08" valueType-type="bool"/>
    <token id="00A7EE08" file="../source/base/algorithm.h" linenr="33" column="15" str="b" scope="00902A58" type="name" varId="2" variable="00A7F350" astParent="00A7EE88" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7F1C8" file="../source/base/algorithm.h" linenr="33" column="16" str=")" scope="00902A58" link="00A7EFC8"/>
    <token id="00A7EE48" file="../source/base/algorithm.h" linenr="33" column="18" str="?" scope="00902A58" astParent="00A7F288" astOperand1="00A7EE88" astOperand2="00A7ED48" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7EF48" file="../source/base/algorithm.h" linenr="33" column="20" str="a" scope="00902A58" type="name" varId="1" variable="00A7F0D0" astParent="00A7ED48" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7ED48" file="../source/base/algorithm.h" linenr="33" column="22" str=":" scope="00902A58" astParent="00A7EE48" astOperand1="00A7EF48" astOperand2="00A7F048" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7F048" file="../source/base/algorithm.h" linenr="33" column="24" str="b" scope="00902A58" type="name" varId="2" variable="00A7F350" astParent="00A7ED48" valueType-type="long" valueType-sign="unsigned" valueType-originalTypeName="size_t"/>
    <token id="00A7F088" file="../source/base/algorithm.h" linenr="33" column="25" str=";" scope="00902A58"/>
    <token id="00A7F2C8" file="../source/base/algorithm.h" linenr="34" column="1" str="}" scope="00902A58" link="00A7EF88"/>
  </tokenlist>
  <scopes>
    <scope id="00902C20" type="Global">
      <functionList>
        <function id="027A16F0" tokenDef="00A7EA48" name="min_zz" type="Function">
          <arg nr="1" variable="00A7F0D0"/>
          <arg nr="2" variable="00A7F350"/>
        </function>
      </functionList>
    </scope>
    <scope id="00902A58" type="Function" className="min_zz" bodyStart="00A7EF88" bodyEnd="00A7F2C8" nestedIn="00902C20" function="027A16F0"/>
  </scopes>
  <variables>
    <var id="00A7F0D0" nameToken="00A7EBC8" typeStartToken="00A7EB48" typeEndToken="00A7EB48" access="Argument" scope="00902A58" constness="0" isArgument="true" isArray="false" isClass="false" isConst="false" isExtern="false" isLocal="false" isPointer="false" isReference="false" isStatic="false"/>
    <var id="00A7F350" nameToken="00A7F248" typeStartToken="00A7EDC8" typeEndToken="00A7EDC8" access="Argument" scope="00902A58" constness="0" isArgument="true" isArray="false" isClass="false" isConst="false" isExtern="false" isLocal="false" isPointer="false" isReference="false" isStatic="false"/>
  </variables>
  <valueflow>
  </valueflow>
</dump>
</dumps>
